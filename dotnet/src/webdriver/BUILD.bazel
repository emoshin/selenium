load("@io_bazel_rules_dotnet//dotnet:defs.bzl", "net_library", "core_library", "core_resource")
load("//dotnet:merge-assemblies.bzl", "merged_assembly")
load("//dotnet:nuget.bzl", "nuget_package")
load("//dotnet:selenium-dotnet-version.bzl",
     "SE_VERSION",
     "ASSEMBLY_VERSION",
     "SUPPORTED_NET_FRAMEWORKS")

[net_library(
  name = "{}assembly".format(framework),
  srcs = glob([
    "*.cs",
    "Chrome/*.cs",
    "Edge/*.cs",
    "Firefox/**/*.cs",
    "Html5/*.cs",
    "IE/*.cs",
    "Interactions/*.cs",
    "Internal/*.cs",
    "Opera/*.cs",
    "Remote/**/*.cs",
    "Safari/*.cs",
    "Support/*.cs"
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.core.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.data.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.drawing.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.io.compression.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.io.compression.filesystem.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.net.http.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.xml.dll",
    "@json.net//:net45"
  ],
  resources = [
    ":isDisplayed",
    ":getAttribute"
  ],
  visibility = ["//visibility:public"],
  out = "unmerged/{}/WebDriver.dll".format(framework),
  dotnet_context_data = "@io_bazel_rules_dotnet//:net_context_data_{}".format(framework)
) for framework in SUPPORTED_NET_FRAMEWORKS]

core_library(
  name = "netstandard2.0",
  srcs = glob([
    "*.cs",
    "Chrome/*.cs",
    "Edge/*.cs",
    "Firefox/**/*.cs",
    "Html5/*.cs",
    "IE/*.cs",
    "Interactions/*.cs",
    "Internal/*.cs",
    "Opera/*.cs",
    "Remote/**/*.cs",
    "Safari/*.cs",
    "Support/*.cs"
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.core:netstandard.dll",
    "@json.net//:netcore"
  ],
  resources = [
    ":isDisplayed",
    ":getAttribute"
  ],
  defines = [
    "NETSTANDARD2_0"
  ],
  out = "merged/netstandard2.0/WebDriver.dll",
  visibility = ["//visibility:public"]
)

[net_library(
  name = "{}assembly-strongnamed".format(framework),
  srcs = glob([
    "*.cs",
    "Chrome/*.cs",
    "Edge/*.cs",
    "Firefox/**/*.cs",
    "Html5/*.cs",
    "IE/*.cs",
    "Interactions/*.cs",
    "Internal/*.cs",
    "Opera/*.cs",
    "Remote/**/*.cs",
    "Safari/*.cs",
    "Support/*.cs"
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.core.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.data.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.drawing.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.io.compression.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.io.compression.filesystem.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.net.http.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.xml.dll",
    "@json.net//:net45"
  ],
  resources = [
    ":isDisplayed",
    ":getAttribute"
  ],
  visibility = ["//visibility:public"],
  out = "strongnamed-unmerged/{}/WebDriver.dll".format(framework, framework),
  keyfile = "//dotnet:WebDriver.snk",
  dotnet_context_data = "@io_bazel_rules_dotnet//:net_context_data_{}".format(framework)
) for framework in SUPPORTED_NET_FRAMEWORKS]

core_library(
  name = "netstandard2.0-strongnamed",
  srcs = glob([
    "*.cs",
    "Chrome/*.cs",
    "Edge/*.cs",
    "Firefox/**/*.cs",
    "Html5/*.cs",
    "IE/*.cs",
    "Interactions/*.cs",
    "Internal/*.cs",
    "Opera/*.cs",
    "Remote/**/*.cs",
    "Safari/*.cs",
    "Support/*.cs"
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.core:netstandard.dll",
    "@json.net//:netcore"
  ],
  resources = [
    ":isDisplayed",
    ":getAttribute"
  ],
  defines = [
    "NETSTANDARD2_0"
  ],
  keyfile = "//dotnet:WebDriver.snk",
  out = "strongnamed/netstandard2.0/WebDriver.dll",
  visibility = ["//visibility:public"]
)

[merged_assembly(
  name = "{}".format(framework),
  src_assembly = ":{}assembly".format(framework),
  deps = ["@json.net//:net45"],
  visibility = ["//visibility:public"],
  out = "merged/{}/WebDriver.dll".format(framework),
) for framework in SUPPORTED_NET_FRAMEWORKS]

[merged_assembly(
  name = "{}-strongnamed".format(framework),
  src_assembly = ":{}assembly-strongnamed".format(framework),
  deps = ["@json.net//:net45"],
  keyfile = "//dotnet:WebDriver.snk",
  visibility = ["//visibility:public"],
  out = "strongnamed/{}/WebDriver.dll".format(framework),
) for framework in SUPPORTED_NET_FRAMEWORKS]

nuget_package(
  name = "package",
  src = "WebDriver.nuspec",
  deps = [
    ":net45",
    ":net46",
    ":net47",
    ":netstandard2.0",
  ],
  package_id = "Selenium.WebDriver",
  package_version = "{}".format(SE_VERSION),
  visibility = ["//visibility:public"],
)

nuget_package(
  name = "package-strongnamed",
  src = "WebDriver.nuspec",
  deps = [
    ":net45-strongnamed",
    ":net46-strongnamed",
    ":net47-strongnamed",
    ":netstandard2.0-strongnamed",
  ],
  package_id = "Selenium.WebDriver.StrongNamed",
  package_version = "{}".format(SE_VERSION),
  visibility = ["//visibility:public"],
)

core_resource(
  name = "isDisplayed",
  src = "//javascript/atoms/fragments:is-displayed.js",
  identifier = "isDisplayed.js"
)

core_resource(
  name = "getAttribute",
  src = "//javascript/webdriver/atoms:get-attribute.js",
  identifier = "getAttribute.js"
)
