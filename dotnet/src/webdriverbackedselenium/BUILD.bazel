load("@io_bazel_rules_dotnet//dotnet:defs.bzl", "net_library", "core_library", "core_resource")
load("//dotnet:nuget.bzl", "nuget_package")
load("//dotnet:selenium-dotnet-version.bzl",
     "SE_VERSION",
     "ASSEMBLY_VERSION",
     "SUPPORTED_NET_FRAMEWORKS")

[net_library(
  name = "{}".format(framework),
  srcs = glob([
    "*.cs",
    "Internal/**/*.cs",
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.core.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.data.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.drawing.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.xml.dll",
    "//dotnet/src/webdriver:{}assembly".format(framework)
  ],
  resources = [
    ":injectableSelenium",
    ":htmlutils",
    ":findElement",
    ":findOption",
    ":fireEvent",
    ":fireEventAt",
    ":getText",
    ":linkLocator",
    ":isElementPresent",
    ":isSomethingSelected",
    ":isTextPresent",
    ":isVisible",
    ":type",
  ],
  visibility = ["//visibility:public"],
  out = "merged/{}/Selenium.WebDriverBackedSelenium.dll".format(framework),
  dotnet_context_data = "@io_bazel_rules_dotnet//:net_context_data_{}".format(framework)
) for framework in SUPPORTED_NET_FRAMEWORKS]

core_library(
  name = "netstandard2.0",
  srcs = glob([
    "*.cs",
    "Internal/**/*.cs",
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.core:netstandard.dll",
    "//dotnet/src/webdriver:netstandard2.0"
  ],
  resources = [
    ":injectableSelenium",
    ":htmlutils",
    ":findElement",
    ":findOption",
    ":fireEvent",
    ":fireEventAt",
    ":getText",
    ":linkLocator",
    ":isElementPresent",
    ":isSomethingSelected",
    ":isTextPresent",
    ":isVisible",
    ":type",
  ],
  defines = [
    "NETSTANDARD2_0"
  ],
  out = "merged/netstandard2.0/Selenium.WebDriverBackedSelenium.dll",
  visibility = ["//visibility:public"]
)

[net_library(
  name = "{}-strongnamed".format(framework),
  srcs = glob([
    "*.cs",
    "Internal/**/*.cs",
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.core.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.data.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.drawing.dll",
    "@io_bazel_rules_dotnet//dotnet/stdlib.net:system.xml.dll",
    "//dotnet/src/webdriver:{}assembly-strongnamed".format(framework)
  ],
  resources = [
    ":injectableSelenium",
    ":htmlutils",
    ":findElement",
    ":findOption",
    ":fireEvent",
    ":fireEventAt",
    ":getText",
    ":linkLocator",
    ":isElementPresent",
    ":isSomethingSelected",
    ":isTextPresent",
    ":isVisible",
    ":type",
  ],
  visibility = ["//visibility:public"],
  out = "merged/{}/Selenium.WebDriverBackedSelenium.dll".format(framework),
  keyfile = "//dotnet:WebDriver.snk",
  dotnet_context_data = "@io_bazel_rules_dotnet//:net_context_data_{}".format(framework)
) for framework in SUPPORTED_NET_FRAMEWORKS]

core_library(
  name = "netstandard2.0-strongnamed",
  srcs = glob([
    "*.cs",
    "Internal/**/*.cs",
  ]),
  deps = [
    "@io_bazel_rules_dotnet//dotnet/stdlib.core:netstandard.dll",
    "//dotnet/src/webdriver:netstandard2.0-strongnamed"
  ],
  resources = [
    ":injectableSelenium",
    ":htmlutils",
    ":findElement",
    ":findOption",
    ":fireEvent",
    ":fireEventAt",
    ":getText",
    ":linkLocator",
    ":isElementPresent",
    ":isSomethingSelected",
    ":isTextPresent",
    ":isVisible",
    ":type",
  ],
  defines = [
    "NETSTANDARD2_0"
  ],
  out = "merged/netstandard2.0/Selenium.WebDriverBackedSelenium.dll",
  keyfile = "//dotnet:WebDriver.snk",
  visibility = ["//visibility:public"]
)

nuget_package(
  name = "package",
  src = "Selenium.WebDriverBackedSelenium.nuspec",
  deps = [
    ":net45",
    ":net46",
    ":net47",
    ":netstandard2.0",
  ],
  package_id = "Selenium.WebDriverBackedSelenium",
  package_version = "{}".format(SE_VERSION),
  visibility = ["//visibility:public"],
)

nuget_package(
  name = "package-strongnamed",
  src = "Selenium.WebDriverBackedSelenium.nuspec",
  deps = [
    ":net45-strongnamed",
    ":net46-strongnamed",
    ":net47-strongnamed",
    ":netstandard2.0-strongnamed",
  ],
  package_id = "Selenium.WebDriverBackedSelenium.StrongNamed",
  package_version = "{}".format(SE_VERSION),
  visibility = ["//visibility:public"],
)

core_resource(
  name = "injectableSelenium",
  src = "//java/client/src/com/thoughtworks/selenium/webdriven:injectableSelenium.js",
  identifier = "injectableSelenium.js"
)

core_resource(
  name = "htmlutils",
  src = "//java/client/src/com/thoughtworks/selenium/webdriven:htmlutils.js",
  identifier = "htmlutils.js"
)

core_resource(
  name = "findElement",
  src = "//javascript/selenium-atoms:findElement.js",
  identifier = "findElement.js"
)

core_resource(
  name = "findOption",
  src = "//javascript/selenium-atoms:findOption.js",
  identifier = "findOption.js"
)

core_resource(
  name = "fireEvent",
  src = "//javascript/selenium-atoms:fireEvent.js",
  identifier = "fireEvent.js"
)

core_resource(
  name = "fireEventAt",
  src = "//javascript/selenium-atoms:fireEventAt.js",
  identifier = "fireEventAt.js"
)
 
core_resource(
  name = "getText",
  src = "//javascript/selenium-atoms:getText.js",
  identifier = "getText.js"
)
 
core_resource(
  name = "linkLocator",
  src = "//javascript/selenium-atoms:linkLocator.js",
  identifier = "linkLocator.js"
)

core_resource(
  name = "isElementPresent",
  src = "//javascript/selenium-atoms:isElementPresent.js",
  identifier = "isElementPresent.js"
)

core_resource(
  name = "isSomethingSelected",
  src = "//javascript/selenium-atoms:isSomethingSelected.js",
  identifier = "isSomethingSelected.js"
)

core_resource(
  name = "isTextPresent",
  src = "//javascript/selenium-atoms:isTextPresent.js",
  identifier = "isTextPresent.js"
)

core_resource(
  name = "isVisible",
  src = "//javascript/selenium-atoms:isVisible.js",
  identifier = "isVisible.js"
)

core_resource(
  name = "type",
  src = "//javascript/selenium-atoms:type.js",
  identifier = "type.js"
)
